import{_ as s,o as a,c as n,a as l}from"./app.f71259a5.js";const A=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"组件目录","slug":"组件目录","link":"#组件目录","children":[]},{"level":2,"title":"🌈快速使用","slug":"🌈快速使用","link":"#🌈快速使用","children":[]},{"level":2,"title":"局部样式","slug":"局部样式","link":"#局部样式","children":[]},{"level":2,"title":"深度选择器","slug":"深度选择器","link":"#深度选择器","children":[]}],"relativePath":"packages/styles/intro.md","lastUpdated":1711702812000}'),p={name:"packages/styles/intro.md"},e=l(`<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-hidden="true">#</a></h1><p>定义项目全局样式，支持Less，Sass高级应用场景。</p><p><code>styles</code>: 样式存放目录。</p><h2 id="组件目录" tabindex="-1">组件目录 <a class="header-anchor" href="#组件目录" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">📁styles</span></span>
<span class="line"><span style="color:#A6ACCD;">┣━━📁src</span></span>
<span class="line"><span style="color:#A6ACCD;">  └── 📁transition          </span><span style="color:#676E95;font-style:italic;">// 过渡</span></span>
<span class="line"><span style="color:#A6ACCD;">  └── 📄common</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">css          </span><span style="color:#676E95;font-style:italic;">// 公共样式</span></span>
<span class="line"><span style="color:#A6ACCD;">  └── 📄entry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">css            </span></span>
<span class="line"><span style="color:#A6ACCD;">  └── 📄variables</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">css       </span><span style="color:#676E95;font-style:italic;">// 公共变量</span></span>
<span class="line"><span style="color:#A6ACCD;">  └── 📄index</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ts            </span><span style="color:#676E95;font-style:italic;">// 入口</span></span>
<span class="line"></span></code></pre></div><h2 id="🌈快速使用" tabindex="-1">🌈快速使用 <a class="header-anchor" href="#🌈快速使用" aria-hidden="true">#</a></h2><p>在项目下入口文件<code>main.ts</code>引入style:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@vben/style</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>即可应用。</p><h2 id="局部样式" tabindex="-1">局部样式 <a class="header-anchor" href="#局部样式" aria-hidden="true">#</a></h2><p>在vue中，修改局部组件的样式需要在 <code>&lt;style&gt;</code> 标签中启用 <code>scoped</code> 属性。</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/*业务代码*/</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>使用 scoped 后，父组件的样式将不会渗透到子组件中。不过一个子组件的根节点会同时受其父组件的 scoped CSS 和子组件的 scoped CSS 的影响。这样设计是为了让父组件可以从布局的角度出发，调整其子组件根元素的样式。</p></div><h2 id="深度选择器" tabindex="-1">深度选择器 <a class="header-anchor" href="#深度选择器" aria-hidden="true">#</a></h2><p>如果你希望 scoped 样式中的一个选择器能够作用得“更深”，例如影响子组件，你可以使用 <code>&gt;&gt;&gt;</code> 操作符。有些像 Sass 之类的预处理器无法正确解析 <code>&gt;&gt;&gt;</code>. 这种情况下你可以使用 <code>/deep/</code> 或 <code>::v-deep</code> 操作符取而代之——两者都是 <code>&gt;&gt;&gt;</code> 的别名，同样可以正常工作。</p><p>使用 scoped 后，父组件的样式将不会渗透到子组件中，所以可以使用以下方式解决：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">scoped</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* deep selectors */</span></span>
<span class="line"><span style="color:#A6ACCD;">  ::v-deep(</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* shorthand */</span></span>
<span class="line"><span style="color:#A6ACCD;">  :deep(</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* targeting slot content */</span></span>
<span class="line"><span style="color:#A6ACCD;">  ::v-slotted(</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* shorthand */</span></span>
<span class="line"><span style="color:#A6ACCD;">  :slotted(</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* one-off global rule */</span></span>
<span class="line"><span style="color:#A6ACCD;">  ::v-global(</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* shorthand */</span></span>
<span class="line"><span style="color:#A6ACCD;">  :global(</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">foo</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,17),o=[e];function t(c,r,i,y,D,C){return a(),n("div",null,o)}const F=s(p,[["render",t]]);export{A as __pageData,F as default};
